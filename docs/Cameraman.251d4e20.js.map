{"mappings":"gUAAA,IAAAA,EAAAC,EAAA,SACO,MAAMC,EAIXC,YAAmBC,EAAoBC,EAAI,EAAGC,EAAI,GAAIC,EAAI,QAAvCH,MAAAA,EACjBI,KAAKC,SAAW,IAAIT,EAAAU,MAAMC,cAC1BH,KAAKC,SAASG,QAAQC,OAAOC,WAAYD,OAAOE,aAChDP,KAAKQ,OAASR,KAAKC,SAASQ,WAC5BC,SAASC,KAAKC,YAAYZ,KAAKQ,QAE/BR,KAAKa,OAAS,IAAIrB,EAAAU,MAAMY,kBACtB,GACAT,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAGFP,KAAKa,OAAOE,SAASlB,EAAIA,EACzBG,KAAKa,OAAOE,SAASjB,EAAIA,EACzBE,KAAKa,OAAOG,SAASjB,EAAIA,EACzBC,KAAKa,OAAOI,OAAO,EAAG,EAAG,GAEzBP,SAASQ,iBAAiB,UAAU,KAClCC,QAAQC,IAAI,aAITC,OAAOC,GAEVtB,KAAKQ,OAAOe,QAAUvB,KAAKQ,OAAOgB,aAClCxB,KAAKQ,OAAOiB,SAAWzB,KAAKQ,OAAOkB,eAGnC1B,KAAKC,SAASG,QACZJ,KAAKQ,OAAOgB,YACZxB,KAAKQ,OAAOkB,cACZ,GAEF1B,KAAKa,OAAOc,OAAS3B,KAAKQ,OAAOgB,YAAcxB,KAAKQ,OAAOkB,aAC3D1B,KAAKa,OAAOe,0BAGd5B,KAAKC,SAAS4B,OAAO7B,KAAKJ,MAAOI,KAAKa","sources":["src/utilities/three/Cameraman.ts"],"sourcesContent":["import { THREE } from \".\"\nexport class Cameraman {\n  public camera: THREE.PerspectiveCamera\n  public renderer: THREE.WebGLRenderer\n  public canvas: HTMLCanvasElement\n  constructor(public scene: THREE.Scene, x = 0, y = 10, z = 0) {\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n    this.canvas = this.renderer.domElement\n    document.body.appendChild(this.canvas)\n\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    )\n\n    this.camera.position.x = x\n    this.camera.position.y = y\n    this.camera.rotation.z = z\n    this.camera.lookAt(0, 0, 0)\n\n    document.addEventListener(\"resize\", () => {\n      console.log(\"resize\")\n    })\n  }\n\n  public update(es: number) {\n    if (\n      this.canvas.width !== this.canvas.clientWidth ||\n      this.canvas.height !== this.canvas.clientHeight\n    ) {\n      // This stuff in here is just for auto-resizing.\n      this.renderer.setSize(\n        this.canvas.clientWidth,\n        this.canvas.clientHeight,\n        false\n      )\n      this.camera.aspect = this.canvas.clientWidth / this.canvas.clientHeight\n      this.camera.updateProjectionMatrix()\n    }\n\n    this.renderer.render(this.scene, this.camera)\n  }\n}\n"],"names":["$V3qFZ","parcelRequire","$06979d1f4bb6d7cc$export$d932e6d427d58860","constructor","scene","x","y","z","this","renderer","THREE","WebGLRenderer","setSize","window","innerWidth","innerHeight","canvas","domElement","document","body","appendChild","camera","PerspectiveCamera","position","rotation","lookAt","addEventListener","console","log","update","es","width","clientWidth","height","clientHeight","aspect","updateProjectionMatrix","render"],"version":3,"file":"Cameraman.251d4e20.js.map"}