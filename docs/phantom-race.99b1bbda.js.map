{"mappings":"qYAAA,IAAAA,EAAe,KACb,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAC9BH,SAASI,KAAKC,YAAYN,GAE1B,MAAMO,EAAS,wMAeZC,OACAC,MAAM,MACNC,KAAKC,GAAQA,EAAIF,MAAM,MAI1BT,EAAOY,MAFI,IAGXZ,EAAOa,OAFI,IAGX,MAAMC,EAAQP,EAAO,GAAGQ,OAClBC,EAAQC,KAAKC,IAAIX,EAAOQ,OAAQD,GAChCK,EANK,IAMKL,EACVM,EANK,IAMKJ,EAChB,IAAIK,EAAW,EACXC,EAAQ,EACRC,GAAqBC,aAAaC,QAAQ,cAAgB,EAC1DC,EAAMC,KAAKD,MACXE,EAAY,IACZC,EAAiBT,EAoCrB,SAASU,EAAKC,GACZV,GAAYU,EACRV,EAAW,IAAGA,EAAW,GACzBA,EAAWP,EAAQ,IAAGO,EAAWP,EAAQ,GAC7CkB,IAGF,SAASC,IACP1B,EAAO2B,QAAQ3B,EAAO4B,OACtBN,IACAG,IACAJ,EAAY,IAAMN,EAAQ,EAC1BI,EAAMC,KAAKD,MAGb,SAASM,IAEP,OADgBzB,EAAOS,EAAQ,GACfK,IACd,IAAK,IACCQ,GAAkB,GAAGO,IACzB,MACF,IAAK,IACHd,GAAS,GACT,MACF,IAAK,IACHA,GAAS,GAKf,SAASc,IACHd,EAAQC,IACVA,EAAYD,EACZE,aAAaa,QAAQ,YAAad,EAAY,KAEhDD,EAAQ,EACRO,EAAiBT,EACjBC,EAAWJ,KAAKqB,MAAMxB,EAAQ,GAxEhCsB,IAEA,SAASG,IACPC,sBAAsBD,GACXZ,KAAKD,MAAQA,EACfE,GAAWK,IAEpB9B,EAAIsC,UAAU,EAAG,EArBR,IACA,KAsBT,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAO0B,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAI7B,EAAO6B,IACzB,OAAQpC,EAAOmC,GAAGC,IAChB,IAAK,IACH,GAAI3B,EAAQ0B,EAAIb,EAAgB,MAChC1B,EAAIyC,UAAY,UAChBzC,EAAI0C,SAASF,EAAIxB,EAAIuB,EAAItB,EAAID,EAAIC,GACjC,MACF,IAAK,IACHjB,EAAIyC,UAAY,UAChBzC,EAAI0C,SAASF,EAAIxB,EAAIuB,EAAItB,EAAID,EAAIC,GACjC,MACF,IAAK,IACHjB,EAAIyC,UAAY,YAChBzC,EAAI0C,SAASF,EAAIxB,EAAIuB,EAAItB,EAAID,EAAIC,GAKzCjB,EAAIyC,UAAY,UAChBzC,EAAI0C,SAASxB,EAAWF,GAAKH,EAAQ,GAAKI,EAAID,EAAIC,GAClDjB,EAAI2C,YAAc,SAClB3C,EAAI4C,WAAW,UAAUzB,IAAS,EAAGF,GACrCjB,EAAI4C,WAAW,UAAU9B,KAAK+B,IAAIzB,EAAWD,KAAU,EAAQ,EAALF,GA2C5DmB,GAEAtC,SAASI,KAAK4C,iBAAiB,WAAYC,IAC1B,cAAXA,EAAGC,KAAqBrB,GAAK,GAClB,eAAXoB,EAAGC,KAAsBrB,EAAK,GACnB,YAAXoB,EAAGC,KAAmBlB","sources":["src/games/phantom-race/index.ts"],"sourcesContent":["export default () => {\n  const canvas = document.createElement(\"canvas\")\n  const ctx = canvas.getContext(\"2d\")\n  document.body.appendChild(canvas)\n\n  const matrix = `\n|0.0  00  0 |\n|     0   0 |\n|  0  0  0 0|\n|  0  0    0|\n| 0.  0 0  0|\n| 000   0   |\n|   0 0  0 0|\n|0  .  .0   |\n|  000  0.0 |\n|    .  0   |\n|.   0   0  |\n|0 0  0     |\n|  0  0  0 0|\n`\n    .trim()\n    .split(\"\\n\")\n    .map((row) => row.split(\"\"))\n\n  const GW = 640\n  const GH = 480\n  canvas.width = GW\n  canvas.height = GH\n  const gridX = matrix[0].length\n  const gridY = Math.min(matrix.length, gridX)\n  const TW = GW / gridX\n  const TH = GH / gridY\n  let shipTile = 0\n  let score = 0\n  let highScore: number = +localStorage.getItem(\"highScore\") || 0\n  let now = Date.now()\n  let gameSpeed = 1000\n  let invinsibleRows = TH\n  resetShip()\n\n  function render() {\n    requestAnimationFrame(render)\n    const es = Date.now() - now\n    if (es > gameSpeed) moveForward()\n\n    ctx.clearRect(0, 0, GW, GH)\n\n    for (var y = 0; y < gridY; y++) {\n      for (var x = 0; x < gridX; x++) {\n        switch (matrix[y][x]) {\n          case \"0\":\n            if (gridY - y < invinsibleRows) break\n            ctx.fillStyle = \"#330000\"\n            ctx.fillRect(x * TW, y * TH, TW, TH)\n            break\n          case \"|\":\n            ctx.fillStyle = \"#000000\"\n            ctx.fillRect(x * TW, y * TH, TW, TH)\n            break\n          case \".\":\n            ctx.fillStyle = \"#00ff0088\"\n            ctx.fillRect(x * TW, y * TH, TW, TH)\n            break\n        }\n      }\n    }\n    ctx.fillStyle = \"#FF0000\"\n    ctx.fillRect(shipTile * TW, (gridY - 1) * TH, TW, TH)\n    ctx.strokeStyle = \"yellow\"\n    ctx.strokeText(`score: ${score}`, 0, TH)\n    ctx.strokeText(`score: ${Math.max(highScore, score)}`, 0, TH * 2)\n  }\n\n  function move(verticalMove) {\n    shipTile += verticalMove\n    if (shipTile < 0) shipTile = 0\n    if (shipTile > gridX - 1) shipTile = gridX - 1\n    checkPosition()\n  }\n\n  function moveForward() {\n    matrix.unshift(matrix.pop())\n    invinsibleRows--\n    checkPosition()\n    gameSpeed = 250 - score / 5\n    now = Date.now()\n  }\n\n  function checkPosition() {\n    const lastRow = matrix[gridY - 1]\n    switch (lastRow[shipTile]) {\n      case \"0\":\n        if (invinsibleRows <= 0) resetShip()\n        break\n      case \".\":\n        score += 10\n        break\n      case \" \":\n        score += 1\n        break\n    }\n  }\n\n  function resetShip() {\n    if (score > highScore) {\n      highScore = score\n      localStorage.setItem(\"highScore\", highScore + \"\")\n    }\n    score = 0\n    invinsibleRows = TH\n    shipTile = Math.round(gridX / 2)\n  }\n\n  render()\n\n  document.body.addEventListener(\"keydown\", (ev) => {\n    if (ev.key === \"ArrowLeft\") move(-1)\n    if (ev.key === \"ArrowRight\") move(1)\n    if (ev.key === \"ArrowUp\") moveForward()\n  })\n}\n"],"names":["$a4d1549c23a6042a$export$2e2bcd8739ae039","canvas","document","createElement","ctx","getContext","body","appendChild","matrix","trim","split","map","row","width","height","gridX","length","gridY","Math","min","TW","TH","shipTile","score","highScore","localStorage","getItem","now","Date","gameSpeed","invinsibleRows","move","verticalMove","checkPosition","moveForward","unshift","pop","resetShip","setItem","round","render","requestAnimationFrame","clearRect","y","x","fillStyle","fillRect","strokeStyle","strokeText","max","addEventListener","ev","key"],"version":3,"file":"phantom-race.99b1bbda.js.map"}