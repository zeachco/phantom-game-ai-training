{"mappings":"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","sources":["src/games/space-shield/index.ts","src/games/space-shield/classes/Mob.ts","node_modules/@parcel/runtime-js/lib/runtime-de6e512aeffc63e7.js","node_modules/@parcel/runtime-js/lib/runtime-2f275602f0fae600.js","node_modules/@parcel/runtime-js/lib/runtime-89170b611333acc5.js","node_modules/@parcel/runtime-js/lib/runtime-61085fca18bc8a92.js"],"sourcesContent":["import { MixOperation } from \"three\"\nimport { random } from \"../../utilities/math\"\nimport { Mob } from \"./classes/Mob\"\n\nexport default async () => {\n  const { THREE } = await import(\"../../utilities/three\")\n  const { Cameraman } = await import(\"../../utilities/three/Cameraman.class\")\n  const { GameLoop } = await import(\"../../utilities/three/GameLoop.class\")\n  const { Central } = await import(\"./classes/Central.class\")\n  const { GamePad } = await import(\"../../utilities/inputs/Gamepad.class\")\n\n  const scene = new THREE.Scene()\n  const cameraman = new Cameraman(scene, 0, 10, 0)\n  const controls = new Map()\n  controls.set(\"KeyW\", \"KeyUp\")\n  controls.set(\"KeyW\", \"KeyUp\")\n  controls.set(\"KeyW\", \"KeyUp\")\n  for (let n = 0; n < 9; n++) {\n    controls.set(`spawn${n}`, `Digit${n}`)\n  }\n  const pad = new GamePad(controls)\n\n  const central = new Central()\n  scene.add(central.mesh)\n  const mobs: Mob[] = []\n\n  const loop = new GameLoop()\n  loop.play((es, dt) => {\n    central.update(dt)\n    cameraman.update(dt)\n    checkSpawner()\n    mobs.forEach((m) => {\n      m.update(es)\n      if (m.hp <= 0) {\n      }\n    })\n  })\n\n  function checkSpawner() {\n    for (let n = 0; n < 9; n++) {\n      if (pad.once(`spawn${n}`)) {\n        console.log(`spawning mob #${n}`)\n        const distance = 5\n        const a = random(Math.PI * 2, 0, true)\n        const x = Math.cos(a) * distance\n        const z = Math.sin(a) * distance\n        const mob = new Mob(x, z)\n        mob.hp = 3 * n\n        mob.speed = 0.0011 - 0.0001 * (n + 1)\n        mobs.push(mob)\n        mob.target = central\n        mob.material.color.setHSL((n * Math.PI * 2) / 10, 1, 0.5)\n        scene.add(mob.mesh)\n      }\n    }\n  }\n}\n","import { THREE } from \"../../../utilities/three\"\nimport { Central } from \"./Central.class\"\n\nconst geometry = new THREE.BoxGeometry()\n\nexport class Mob {\n  public targetIndex = 0\n  public mesh: THREE.Mesh\n  public speed = 0.001\n  public target: Central | null = null\n  public material: THREE.MeshBasicMaterial\n  public vector: THREE.Vector = new THREE.Vector3(0, 0, 0)\n  public hp = 100\n  constructor(public x = 0, public z = 0) {\n    this.material = new THREE.MeshBasicMaterial()\n    this.mesh = new THREE.Mesh(geometry, this.material)\n    this.mesh.scale.set(0.3, 0.3, 0.3)\n    this.mesh.position.set(this.x, 0, this.z)\n  }\n\n  update(es: number) {\n    if (this.target) {\n      const distance = this.mesh.position.distanceTo(this.target.mesh.position)\n\n      const { x, z } = this.target.mesh.position\n\n      if (distance > 1) {\n        if (x < this.x) this.x -= this.speed * es\n        if (x > this.x) this.x += this.speed * es\n        if (z < this.z) this.z -= this.speed * es\n        if (z > this.z) this.z += this.speed * es\n      } else {\n        this.hp -= 1\n      }\n      // if (this.target.isInRange(this.mesh, this.speed * 1.5)) {\n      //   this.changeTarget()\n      // }\n    }\n\n    this.mesh.position.set(this.x, 0, this.z)\n    this.mesh.rotation.x += this.speed * es\n    this.mesh.rotation.y += this.speed * es\n  }\n}\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9tdt8\"))).then(() => parcelRequire('4OpNP'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"b6ttN\"))).then(() => parcelRequire('2cQnx'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"auXYf\"))).then(() => parcelRequire('2n8hI'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"8bD1A\"))).then(() => parcelRequire('8QmPK'));"],"names":["$9COFO","parcelRequire","$2737bd0e7a1f8365$export$2e2bcd8739ae039","async","THREE","Promise","resolve","Cameraman","GameLoop","Central","GamePad","scene","Scene","cameraman","controls","Map","set","n1","pad","central","add","mesh","mobs","play","es","dt","update","n","once","console","log","distance","a","random","Math","PI","x","cos","z","sin","mob","$axbXC","Mob","hp","speed","push","target","material","color","setHSL","checkSpawner","forEach","m","$V3qFZ","$a9d1c333d5c327f0$var$geometry","BoxGeometry","$a9d1c333d5c327f0$export$acd1b67b03820565","constructor","targetIndex","vector","Vector3","this","MeshBasicMaterial","Mesh","scale","position","distanceTo","rotation","y","module","exports","import","then"],"version":3,"file":"space-shield.f1225265.js.map"}