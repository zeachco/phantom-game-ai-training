import{c as $}from"./dom.be162d4e.js";import{GamePad as x}from"./Gamepad.8a108b30.js";import{l as N,r as _,b as M,v as B,c as G}from"./three.module.62571882.js";import{GameLoop as C}from"./GameLoop.699b6383.js";class z{constructor(t){this.ctx=t}render(){}}const g=3,v=Array(g).fill(0).map((i,t)=>N(0,360,(t+1)/g));function T(i,t){const e=i+t;return e>g-1?0:e<0?g-1:e}class D{constructor(t){this.weight=0,this.bias=0,Object.assign(this,t)}}class k{constructor(t,e=1,n=[5],s=0,o=0){this.inputs=t,this.outputs=e,this.hiddenLayers=n,this.generation=s,this.mutationAmount=o,this.layers=[],this.score=0,this.layers=[t,...n,e].map(h=>new Array(h).fill(0).map(()=>new D({bias:0,weight:0}))),this.randomize(1)}loadFromFile(t){const e=localStorage.getItem(t),n=JSON.parse(e);return this.fromObject(n),n}saveToFile(t){localStorage.setItem(t,this.toJSON())}fromObject(t){Object.assign(this,t)}toJSON(){const t={score:this.score,generation:this.generation,layers:this.layers};return JSON.stringify(t,null,2)}train(t,e=1e3){const n=[];for(let s=1;s<=e;s++){const[o,h]=t(),r=this.clone(s/e),f=this.feedForward(o),c=h.reduce((l,w)=>l+Math.abs(h[w]-f[w]),0);console.log({inputs:o,expected:h,results:f,distance:c}),n.push({network:r,mutation:r.mutationAmount,distance:c})}return n.sort((s,o)=>s.distance-o.distance),console.table(n.map(s=>s.distance)),n}clone(t=this.mutationAmount){return new k(this.inputs,this.outputs,this.hiddenLayers,this.generation+1,t)}feedForward(t,e=0){const n=this.layers[e];if(!n)return t;const s=n.map(o=>t.reduce((h,r)=>{const f=o.weight*r;return f>o.bias?f:h},0));return this.feedForward(s,e+1)}randomize(t=this.mutationAmount){for(let e=0;e<this.layers.length;e++){const n=this.layers[e];for(let s=0;s<n.length;s++){const o=n[s];o.bias=N(o.bias,_(-1,1),t),o.weight=N(o.weight,_(-1,1),t)}}}}const d=class{constructor(i={}){this.faction=M(0,g-1),this.label=this.faction+"",this.x=0,this.y=0,this.vx=0,this.vy=0,this.a=0,this.va=0,this.s=0,this.focused=!1,this.dead=!1,this.others=[],this.energy=100,this.atk=0,this.vatk=0,this.age=0,this.brain=new k(d.MAX_NB*2,3,[d.MAX_NB,5]),Object.assign(this,i)}forward(){this.vx+=Math.cos(this.a)*.2,this.vy+=Math.sin(this.a)*.2,this.brain.score-=.01}turnLeft(){this.va-=.02}turnRight(){this.va+=.02}get radius(){return d.RADIUS+this.energy/20}kill(){this.dead=!0}update(){this.s*=.99,this.va*=.8,this.vx*=.9,this.vy*=.9,this.vatk*=.9,this.atk=(this.atk+this.vatk)*.7,!this.dead&&(this.energy-=this.s/50,this.energy-=this.va/100,this.x+=this.vx,this.y+=this.vy,this.a+=this.va,this.a>Math.PI&&(this.a-=Math.PI*2),this.a<-Math.PI&&(this.a+=Math.PI*2),this.brain.score<-25&&this.kill(),this.age+=.01,this.age>100&&(this.brain.score-=1))}updateTargets(i,t,e){if(this.others=[],!this.dead){for(let n=0;n<i.length;n++){const s=i[n];if(s.dead||s.faction===this.faction)continue;const o=B(this.x-s.x,this.y-s.y);let h=0;const r=T(this.faction,1)===s.faction,f=T(this.faction,-1)===s.faction;r&&h--,f&&h++;let c=s.x,l=s.y;c-this.x>t/2&&(c-=t),c-this.x<t/-2&&(c+=t),this.y-l<e/-2&&(l-=e),this.y-l>e/2&&(l+=e),this.others.push({x:c,y:l,distance:o,opportunity:h}),!(this.age<d.MIN_AGE_TO_INTERACT||s.age<d.MIN_AGE_TO_INTERACT)&&o<this.radius+s.radius&&(T(this.faction,1)===s.faction&&(this.brain.score-=10),T(this.faction,-1)===s.faction&&(s.kill(),this.brain.score+=10))}this.others.sort((n,s)=>n.distance-s.distance)}}draw(i){this.focused&&this.drawSensors(i),this.drawBody(i),this.drawScore(i)}drawBody(i){const t=this.focused?1:.51,e=T(this.faction,-1),n=Math.PI*.1,s=this.age>d.SENIOR_AGE?"80%":"50%";i.lineWidth=3,i.strokeStyle=`hsla(${v[this.faction]}, 100%, 70%, ${t})`,i.fillStyle=`hsla(${v[this.faction]}, 100%,${s}, ${t})`,i.save(),i.translate(this.x,this.y),i.rotate(this.a),i.beginPath(),i.moveTo(this.radius*.5,0),i.arc(0,0,this.radius,n,Math.PI*2-n),i.lineTo(this.radius*.5,0),i.stroke(),this.age>d.MIN_AGE_TO_INTERACT&&i.fill(),i.beginPath(),i.strokeStyle=`hsla(${v[e]}, 100%, 80%, ${t})`,i.fillStyle=`hsla(${v[e]}, 100%, 20%, ${t})`,i.lineTo(0,0),i.lineTo(this.radius+5,0),i.stroke(),i.fill(),i.restore()}drawSensors(i){i.setLineDash([3,3]),i.lineWidth=2,this.others.slice(0,d.TRACK_NB).forEach((t,e)=>{const n=1/(1+e);i.beginPath(),i.strokeStyle=t.opportunity>0?`rgba(0, 255, 0, ${n})`:`rgba(255, 128, 0, ${n})`,i.moveTo(this.x,this.y),i.lineTo(t.x,t.y),i.stroke();const s=G(this.x-t.x,this.y-t.y);i.fillStyle="black",i.fillText(s.toFixed(1),t.x,t.y)}),i.setLineDash([])}drawScore(i){i.fillStyle="white",i.textAlign="center",i.textBaseline="middle";const t=this.y>d.RADIUS*5?this.y-d.RADIUS*2:this.y+d.RADIUS*2;this.focused&&i.fillText(`${this.brain.score.toFixed(0)}`,this.x,t)}};let y=d;y.TRACK_NB=3;y.RADIUS=10;y.MAX_NB=2;y.MIN_AGE_TO_INTERACT=1;y.SENIOR_AGE=100;const W=async()=>{const i=new x,t=$(),e=t.getContext("2d"),n=new z(e);if(!e)throw new Error("no 2d context");const s=t.width=window.innerWidth,o=t.height=window.innerHeight,h=new C;let r=[],f=r[0],c=!1;const l=new y;l.brain.loadFromFile("top");let w=l.brain.score||0;h.play((b,I)=>{t.width=window.innerWidth,t.height=window.innerHeight;const S=new Array(g).fill(0);r.forEach((a,p)=>{S[a.faction]++,E(a),a.update(),a.x>s&&(a.x=0),a.x<0&&(a.x=s),a.y>o&&(a.y=0),a.y<0&&(a.y=o)}),S.forEach((a,p)=>{if(a<y.MAX_NB){const u=r.find(R=>R.faction===p),F=(u==null?void 0:u.x)||M(0,s),O=(u==null?void 0:u.y)||M(0,o),P=(u==null?void 0:u.a)||_(-Math.PI,Math.PI),A=new y({x:F,y:O,a:P,energy:100,faction:p});A.brain.loadFromFile("top"),A.brain.mutationAmount=a/y.MAX_NB/(1+w),A.brain.randomize(),A.brain.score=0,r.push(A)}}),r.forEach(a=>a.updateTargets(r,s,o));const m=r.concat().sort((a,p)=>p.brain.score-a.brain.score);if(window.scores=m,r.forEach(a=>{a.focused=a===m[0],a.draw(e)}),r=r.filter(a=>!a.dead),f=m[0],f&&f.brain.score>w){const a=f.brain.score;console.log(`New score: ${w} > ${a.toFixed()} (+${(a-w).toFixed(3)})`),w=a,f.brain.saveToFile("top")}i.once("KeyV")&&(c=!c),c?n.render():(e.fillStyle="rgba(255, 255, 255, .6)",e.font="24px Arial",e.textAlign="left",e.textBaseline="bottom",e.fillText("Press V for neural network visuals",0,o))});function E(b){const I=[];b.others.forEach(p=>{I.push(p.distance),I.push(p.opportunity)});const[S,m,a]=b.brain.feedForward(I);S&&b.forward(),m&&b.turnLeft(),a&&b.turnRight()}};export{W as default};
