var et=(i,t,s)=>{if(!t.has(i))throw TypeError("Cannot "+s)};var y=(i,t,s)=>{if(t.has(i))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(i):t.set(i,s)};var p=(i,t,s)=>(et(i,t,"access private method"),s);import{l as b,r as Y,g as K,p as H}from"./three.module.e2623146.js";import{c as q}from"./dom.be162d4e.js";import{GameLoop as it}from"./GameLoop.08ec9c71.js";function ht(i=""){return{loadModel:()=>X(i),saveModel:t=>rt(t,i),discardModel:()=>at(i)}}function X(i){try{const t=localStorage.getItem(`${i}_model`),s=JSON.parse(t);return s?(console.log(`loaded generation #${s.generation}`),s):void 0}catch(t){return console.log(t),null}}function nt(i,t){if(!i||!t)return!1;const s=(e,h)=>e==="generation"?0:h;return JSON.stringify(i,s)===JSON.stringify(t,s)}function rt(i,t){const s=`${t}_model`,e=X(s);if(nt(i,e))console.error("model is identical");else{const h=JSON.stringify(i);console.log(`saving ${s} (generation #${i.generation})`),localStorage.setItem(s,h)}}function at(i){localStorage.removeItem(`${i}_model`)}function I(i){const t=Math.abs(i),s=i>0?0:255,e=i>0?0:255,h=i<0?0:255;return`rgba(${s}, ${e}, ${h}, ${t})`}function ot(){const i=290+Math.random()*260;return"hsl("+i+", 100%, 60%)"}const m=12,U=Math.max(m,10);var C,L;const D=class{static drawNetwork(t,s){const e=U,h=U,r=t.canvas.width-U*2,n=t.canvas.height-U*2,l=n/s.levels.length;for(let g=s.levels.length-1;g>=0;g--){const u=h+b(n-l,0,s.levels.length==1?.5:g/(s.levels.length-1));t.setLineDash([7,3]),D.drawLevel(t,s.levels[g],e,u,r,l,g==s.levels.length-1?["\u2191","\u2190","\u2192","\u2193"]:[])}}static drawLevel(t,s,e,h,r,n,l){var S,G,N,J;const g=e+r,u=h+n,{inputs:v,outputs:M,weights:c,biases:a}=s;for(let f=0;f<v.length;f++)for(let w=0;w<M.length;w++)t.beginPath(),t.moveTo(p(S=D,C,L).call(S,v,f,e,g),u),t.lineTo(p(G=D,C,L).call(G,M,w,e,g),h),t.lineWidth=2,t.strokeStyle=I(c[f][w]),t.stroke();for(let f=0;f<v.length;f++){const w=p(N=D,C,L).call(N,v,f,e,g);t.beginPath(),t.arc(w,u,m,0,Math.PI*2),t.fillStyle="black",t.fill(),t.beginPath(),t.arc(w,u,m*.8,0,Math.PI*2),t.fillStyle=I(v[f]),t.fill()}for(let f=0;f<M.length;f++){const w=p(J=D,C,L).call(J,M,f,e,g);t.beginPath(),t.arc(w,h,m,0,Math.PI*2),t.fillStyle="black",t.fill(),t.beginPath(),t.arc(w,h,m*.6,0,Math.PI*2),t.fillStyle=I(M[f]),t.fill(),t.beginPath(),t.lineWidth=2,t.arc(w,h,m*.8,0,Math.PI*2),t.strokeStyle=I(a[f]),t.setLineDash([3,3]),t.stroke(),t.setLineDash([]),l[f]&&(t.beginPath(),t.textAlign="center",t.textBaseline="middle",t.fillStyle="black",t.strokeStyle="white",t.font=m*1.5+"px Arial",t.fillText(l[f],w,h+m*.1),t.lineWidth=.5,t.strokeText(l[f],w,h+m*.1))}}};let A=D;C=new WeakSet,L=function(t,s,e,h){return b(e,h,t.length==1?.5:s/(t.length-1))},y(A,C);var o=(i=>(i[i.KEYS=0]="KEYS",i[i.DUMMY=1]="DUMMY",i[i.AI=2]="AI",i))(o||{}),P,z;class lt{constructor(t){y(this,P);switch(this.forward=!1,this.left=!1,this.right=!1,this.reverse=!1,t){case o.KEYS:p(this,P,z).call(this);break;case o.DUMMY:this.forward=!0;break}}}P=new WeakSet,z=function(){document.onkeydown=t=>{switch(t.key){case"ArrowLeft":this.left=!0;break;case"ArrowRight":this.right=!0;break;case"ArrowUp":this.forward=!0;break;case"ArrowDown":this.reverse=!0;break}},document.onkeyup=t=>{switch(t.key){case"ArrowLeft":this.left=!1;break;case"ArrowRight":this.right=!1;break;case"ArrowUp":this.forward=!1;break;case"ArrowDown":this.reverse=!1;break}}};class B{constructor(t,s,e=Math.ceil(t/4)){if(this.generation=0,t<s)throw new Error("requires more inputs than outputs");this.levels=[];for(let h=0;h<e;h++){const r=Math.floor(b(t,s,h/e)),n=Math.floor(b(t,s,(h+1)/e));this.levels.push(new k(r,n))}}static feedForward(t,s){let e=k.feedForward(t,s.levels[0]);for(let h=1;h<s.levels.length;h++)e=k.feedForward(e,s.levels[h]);return e}mutate(t,s=.01){if(this.levels.length!==t.levels.length){console.warn(`Neural mismatch ${this.levels.length}>${t.levels.length}`);return}this.generation=t.generation+1;for(let e=0;e<t.levels.length;e++){for(let h=0;h<this.levels[e].biases.length;h++)this.levels[e].biases[h]=b(t.levels[e].biases[h],Y(),s);for(let h=0;h<this.levels[e].weights.length;h++)for(let r=0;r<this.levels[e].weights[h].length;r++)this.levels[e].weights[h][r]=b(t.levels[e].weights[h][r],Y(),s)}}}var $,Q;const F=class{constructor(t=1,s=1){var e;this.inputs=new Array(t),this.outputs=new Array(s),this.biases=new Array(s),this.weights=[];for(let h=0;h<t;h++)this.weights[h]=new Array(s);p(e=F,$,Q).call(e,this)}static feedForward(t,s){for(let e=0;e<s.inputs.length;e++)s.inputs[e]=t[e];for(let e=0;e<s.outputs.length;e++){let h=0;for(let r=0;r<s.inputs.length;r++)h+=s.inputs[r]*s.weights[r][e];h>s.biases[e]?s.outputs[e]=1:s.outputs[e]=0}return s.outputs}};let k=F;$=new WeakSet,Q=function(t){for(let s=0;s<t.inputs.length;s++)for(let e=0;e<t.outputs.length;e++)t.weights[s][e]=Y();for(let s=0;s<t.biases.length;s++)t.biases[s]=Y()},y(k,$);var R,Z,O,V;class gt{constructor(t){y(this,R);y(this,O);this.car=t,this.rayCount=9,this.rayLength=250,this.raySpread=Math.PI/2*3.6,this.rays=[],this.readings=[]}update(t,s){p(this,O,V).call(this),this.readings=[];for(let e=0;e<this.rays.length;e++)this.readings.push(p(this,R,Z).call(this,this.rays[e],t,s))}draw(t){for(let s=0;s<this.rays.length;s++){let e=this.rays[s][1];this.readings[s]&&(e=this.readings[s]),t.beginPath(),t.lineWidth=2,t.strokeStyle="yellow",t.moveTo(this.rays[s][0].x,this.rays[s][0].y),t.lineTo(e.x,e.y),t.stroke(),t.beginPath(),t.lineWidth=2,t.strokeStyle="black",t.moveTo(this.rays[s][1].x,this.rays[s][1].y),t.lineTo(e.x,e.y),t.stroke()}}}R=new WeakSet,Z=function(t,s,e){let h=[];for(let r=0;r<s.length;r++){const n=K(t[0],t[1],s[r][0],s[r][1]);n&&h.push(n)}for(let r=0;r<e.length;r++){const n=e[r].polygon;for(let l=0;l<n.length;l++){const g=K(t[0],t[1],n[l],n[(l+1)%n.length]);g&&h.push(g)}}if(h.length==0)return null;{const r=h.map(l=>l.offset),n=Math.min(...r);return h.find(l=>l.offset==n)}},O=new WeakSet,V=function(){this.rays=[];for(let t=0;t<this.rayCount;t++){const s=b(this.raySpread/2,-this.raySpread/2,this.rayCount==1?.5:t/(this.rayCount-1))+this.car.angle,e={x:this.car.x,y:this.car.y},h={x:this.car.x-Math.sin(s)*this.rayLength,y:this.car.y-Math.cos(s)*this.rayLength};this.rays.push([e,h])}};const ft="/phantom-game-ai-training/assets/car.3e3d3a26.png";let dt=0;var T,_,j,x,W,tt,E,st;class d{constructor(t=0,s=0,e=50,h=50,r=o.DUMMY,n=2.8,l=ot(),g=`${dt++}`){y(this,T);y(this,j);y(this,W);y(this,E);this.x=t,this.y=s,this.width=e,this.height=h,this.maxSpeed=n,this.label=g,this.polygon=[],this.distance=0,this.score=0,this.x=t,this.y=s,this.width=e,this.height=h,this.speed=0,this.acceleration=.3,this.maxSpeed=n,this.friction=.05,this.angle=0,this.damaged=!1,this.useAI=r==o.AI,this.controls=new lt(r),r!=o.DUMMY&&(this.sensor=new gt(this),this.neural=new B(this.sensor.rayCount,Object.keys(this.controls).length,2)),this.img=new Image,this.img.src=ft,this.mask=document.createElement("canvas"),this.mask.width=e,this.mask.height=h;const u=this.mask.getContext("2d");this.img.onload=()=>{u.fillStyle=l,u.rect(0,0,this.width,this.height),u.fill(),u.globalCompositeOperation="destination-atop",u.drawImage(this.img,0,0,this.width,this.height)}}update(t,s){if(!this.damaged&&(p(this,E,st).call(this),p(this,T,_).call(this),this.polygon=p(this,W,tt).call(this),this.damaged=p(this,j,x).call(this,t,s),this.sensor)){this.sensor.update(t,s);const e=this.sensor.readings.map(r=>r==null?0:1-r.offset),h=B.feedForward(e,this.neural);this.useAI&&(this.controls.forward=h[0],this.controls.left=h[1],this.controls.right=h[2],this.controls.reverse=h[3])}}draw(t,s=!1,e=0){this.sensor&&s&&this.sensor.draw(t),t.save(),t.translate(this.x,this.y),t.rotate(-this.angle),this.damaged||(t.drawImage(this.mask,-this.width*.5,-this.height*.5,this.width,this.height),t.globalCompositeOperation="multiply"),t.drawImage(this.img,-this.width*.5,-this.height*.5,this.width,this.height),t.textAlign="center",t.font="bold 11px serif",t.textBaseline="middle",t.fillStyle="rgba(0,0,0, 1)",t.fillText(`${this.label}`,0,this.height*-.5+10),t.restore()}}T=new WeakSet,_=function(){this.score+=Math.cos(this.angle)*this.speed*-10,this.score+=this.speed*5,this.score+=!this.controls.left&&!this.controls.right?1:-1,this.score+=!this.controls.forward&&!this.controls.reverse?1:-1,this.score+=this.controls.forward?1:-1},j=new WeakSet,x=function(t,s){for(let e=0;e<t.length;e++)if(H(this.polygon,t[e]))return!0;for(let e=0;e<s.length;e++)if(H(this.polygon,s[e].polygon))return!0;return!1},W=new WeakSet,tt=function(){const t=[],s=Math.hypot(this.width,this.height)/2,e=Math.atan2(this.width,this.height);return t.push({x:this.x-Math.sin(this.angle-e)*s,y:this.y-Math.cos(this.angle-e)*s}),t.push({x:this.x-Math.sin(this.angle+e)*s,y:this.y-Math.cos(this.angle+e)*s}),t.push({x:this.x-Math.sin(Math.PI+this.angle-e)*s,y:this.y-Math.cos(Math.PI+this.angle-e)*s}),t.push({x:this.x-Math.sin(Math.PI+this.angle+e)*s,y:this.y-Math.cos(Math.PI+this.angle+e)*s}),t},E=new WeakSet,st=function(){if(this.controls.forward&&(this.speed+=this.acceleration),this.controls.reverse&&(this.speed-=this.acceleration),this.speed>this.maxSpeed&&(this.speed=this.maxSpeed),this.speed<-this.maxSpeed/2&&(this.speed=-this.maxSpeed/2),this.speed>0&&(this.speed-=this.friction),this.speed<0&&(this.speed+=this.friction),Math.abs(this.speed)<this.friction&&(this.speed=0),this.speed!=0){const t=this.speed>0?1:-1;this.controls.left&&(this.angle+=.03*t),this.controls.right&&(this.angle-=.03*t)}this.distance+=this.speed,this.x-=Math.sin(this.angle)*this.speed,this.y-=Math.cos(this.angle)*this.speed};class ct{constructor(t,s,e=3){this.x=t,this.width=s,this.laneCount=e,this.borders=[],this.x=t,this.width=s,this.laneCount=e,this.left=t-s/2,this.right=t+s/2;const h=1e6;this.top=-h,this.bottom=h;const r={x:this.left,y:this.top},n={x:this.right,y:this.top},l={x:this.left,y:this.bottom},g={x:this.right,y:this.bottom};this.borders=[[r,l],[n,g]]}getLane(t){const s=this.width/this.laneCount;return this.left+s/2+Math.min(t,this.laneCount-1)*s}draw(t){t.lineWidth=5,t.strokeStyle="white";for(let s=1;s<=this.laneCount-1;s++){const e=b(this.left,this.right,s/this.laneCount);t.setLineDash([20,20]),t.beginPath(),t.moveTo(e,this.top),t.lineTo(e,this.bottom),t.stroke()}t.setLineDash([]),this.borders.forEach(s=>{t.beginPath(),t.moveTo(s[0].x,s[0].y),t.lineTo(s[1].x,s[1].y),t.stroke()})}}const ut={cars:[],sortedCars:[],traffic:[],bestCar:void 0,...ht("highway")},mt=async i=>{const t=q();t.style.cssText="max-width: 50%";const s=q();s.style.cssText="max-width: 50%";const e=t.getContext("2d"),h=s.getContext("2d");t.width=200,s.width=400;const r=Math.round(t.width/75),n=new ct(t.width/2,t.width*.9,r),l=200,g=new it;function u(){Object.assign(i,ut),i.cars=v(l),i.traffic=[],i.bestCar=i.cars[0];const M=i.loadModel();if(M){console.log("Branch of generation "+M.generation);for(let c=0;c<i.cars.length;c++)i.cars[c].neural.mutate(M,c/i.cars.length*.5)}else console.log("Fresh model start");i.traffic.push(new d(n.getLane(0),-300,30,50,o.DUMMY,.1),new d(n.getLane(1),-600,30,50,o.DUMMY,.2),new d(n.getLane(2),-300,30,50,o.DUMMY,.3),new d(n.getLane(0),-400,30,50,o.DUMMY,2),new d(n.getLane(0),-600,30,50,o.DUMMY,2),new d(n.getLane(1),-1400,30,50,o.DUMMY,2),new d(n.getLane(2),-300,30,50,o.DUMMY,2),new d(n.getLane(1),-500,30,50,o.DUMMY,2),new d(n.getLane(1),-900,30,50,o.DUMMY,2),new d(n.getLane(2),-700,30,50,o.DUMMY,2),new d(n.getLane(2),-900,30,50,o.DUMMY,2.1),new d(n.getLane(1),-900,30,50,o.DUMMY,2.3),new d(n.getLane(0),-900,30,50,o.DUMMY,2.2),new d(n.getLane(0),400,30,50,o.DUMMY,2.6),new d(n.getLane(1),375,30,50,o.DUMMY,2.6),new d(n.getLane(2),400,30,50,o.DUMMY,2.6));for(let c=3;c<r;c++)i.traffic.push(new d(n.getLane(c),300,30,50,o.DUMMY,2.5))}function v(M=1){const c=[];for(let a=1;a<=M;a++)c.push(new d(n.getLane(1),100,30,50,o.AI,3,"blue"));return c}u(),g.play((M,c)=>{for(let a=0;a<i.traffic.length;a++)i.traffic[a].update(n.borders,[]);for(let a=0;a<i.cars.length;a++)i.cars[a].update(n.borders,i.traffic);i.sortedCars=i.cars.sort((a,S)=>a.score-S.score),i.bestCar=i.sortedCars[0],i.sortedCars.filter(a=>!a.damaged).length<1&&(i.bestCar.y<i.traffic[6].y&&i.saveModel(i.bestCar.neural),u()),t.height=window.innerHeight,s.height=window.innerHeight,e.save(),e.translate(0,-i.bestCar.y+t.height*.7),n.draw(e);for(let a=0;a<i.traffic.length;a++)i.traffic[a].draw(e);for(let a=0;a<i.cars.length;a++){const S=i.cars[a]===i.bestCar;e.globalAlpha=S?1:.2,i.cars[a].draw(e,S,a)}e.restore(),h.lineDashOffset=-c/50,A.drawNetwork(h,i.bestCar.neural)})};export{mt as default};
