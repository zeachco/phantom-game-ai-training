import{c as O}from"./dom.be162d4e.js";import{GamePad as R}from"./Gamepad.8a108b30.js";import{l as I,r as T,b as F,v as _}from"./three.module.f7a5d9ae.js";import{GameLoop as B}from"./GameLoop.4f365e9c.js";const b=3,S=Array(b).fill(0).map((t,i)=>I(0,360,(i+1)/b));function g(t,i){const s=t+i;return s>b-1?0:s<0?b-1:s}class D{constructor(i){this.weight=0,this.bias=0,Object.assign(this,i)}}class M{constructor(i,s=1,a=[5],e=0,n=0){this.inputs=i,this.outputs=s,this.hiddenLayers=a,this.generation=e,this.mutationAmount=n,this.layers=[],this.score=0,this.layers=[i,...a,s].map(r=>new Array(r).fill(0).map(()=>new D({bias:0,weight:0}))),this.randomize(1)}loadFromFile(i){const s=localStorage.getItem(i),a=JSON.parse(s);return this.fromObject(a),a}saveToFile(i){localStorage.setItem(i,this.toJSON())}fromObject(i){Object.assign(this,i)}toJSON(){const i={score:this.score,generation:this.generation,layers:this.layers};return JSON.stringify(i,null,2)}train(i,s=1e3){const a=[];for(let e=1;e<=s;e++){const[n,r]=i(),d=this.clone(e/s),f=this.feedForward(n),c=r.reduce((h,w)=>h+Math.abs(r[w]-f[w]),0);console.log({inputs:n,expected:r,results:f,distance:c}),a.push({network:d,mutation:d.mutationAmount,distance:c})}return a.sort((e,n)=>e.distance-n.distance),console.table(a.map(e=>e.distance)),a}clone(i=this.mutationAmount){return new M(this.inputs,this.outputs,this.hiddenLayers,this.generation+1,i)}feedForward(i,s=0){const a=this.layers[s];if(!a)return i;const e=a.map(n=>i.reduce((r,d)=>{const f=n.weight*d;return f>n.bias?f:r},0));return this.feedForward(e,s+1)}randomize(i=this.mutationAmount){for(let s=0;s<this.layers.length;s++){const a=this.layers[s];for(let e=0;e<a.length;e++){const n=a[e];n.bias=I(n.bias,T(-1,1),i),n.weight=I(n.weight,T(-1,1),i)}}}}const y=class{constructor(t={}){this.faction=F(0,b-1),this.label=this.faction+"",this.x=0,this.y=0,this.vx=0,this.vy=0,this.a=0,this.va=0,this.s=0,this.focused=!1,this.dead=!1,this.others=[],this.energy=100,this.atk=0,this.vatk=0,this.brain=new M(y.MAX_NB*2,3,[5]),Object.assign(this,t)}forward(){this.vx+=Math.cos(this.a)*.25,this.vy+=Math.sin(this.a)*.25,this.brain.score-=.01}turnLeft(){this.va-=.025}turnRight(){this.va+=.025}get radius(){return y.RADIUS+this.energy/20}update(){this.s*=.99,this.va*=.7,this.vx*=.9,this.vy*=.9,this.vatk*=.9,this.atk=(this.atk+this.vatk)*.7,!this.dead&&(this.energy-=this.s/50,this.energy-=this.va/100,this.x+=this.vx,this.y+=this.vy,this.a+=this.va,this.a>Math.PI&&(this.a-=Math.PI*2),this.a<-Math.PI&&(this.a+=Math.PI*2),this.brain.score<-25&&(this.dead=!0))}updateTargets(t,i,s){if(this.others=[],!this.dead){for(let a=0;a<t.length;a++){const e=t[a];if(e.dead||e.faction===this.faction)continue;const n=_(this.x-e.x,this.y-e.y);let r=0;const d=g(this.faction,1)===e.faction,f=g(this.faction,-1)===e.faction;d&&r--,f&&r++,n<this.radius+e.radius&&(g(this.faction,1)===e.faction&&(this.brain.score-=50),g(this.faction,-1)===e.faction&&(this.brain.score+=50));let c=e.x,h=e.y;c-this.x>i/2&&(c-=i),c-this.x<i/-2&&(c+=i),this.y-h<s/-2&&(h-=s),this.y-h>s/2&&(h+=s),this.others.push({x:c,y:h,distance:n,opportunity:r})}this.others.sort((a,e)=>a.distance-e.distance)}}draw(t){this.focused&&this.drawRelations(t),this.drawBody(t),this.drawScore(t)}drawBody(t){const i=(this.focused,1),s=g(this.faction,-1);t.lineWidth=1,t.strokeStyle=`hsla(${S[s]}, 100%, 70%, ${i})`,t.fillStyle=`hsla(${S[this.faction]}, 100%, 70%, ${i})`,t.save(),t.translate(this.x,this.y),t.rotate(this.a),t.beginPath(),t.moveTo(0,0),t.arc(0,0,this.radius,0,Math.PI*2),t.lineTo(0,0),t.stroke(),t.fill(),t.beginPath(),t.strokeStyle=`hsla(${S[s]}, 100%, 80%, ${i})`,t.fillStyle=`hsla(${S[s]}, 100%, 20%, ${i})`,t.lineTo(0,0),t.lineTo(this.radius+5,0),t.stroke(),t.fill(),t.restore()}drawRelations(t){t.setLineDash([3,3]),t.lineWidth=2,this.others.slice(0,y.TRACK_NB).forEach((i,s)=>{const a=1/(1+s);t.beginPath(),t.strokeStyle=i.opportunity>0?`rgba(0, 255, 0, ${a})`:`rgba(255, 128, 0, ${a})`,t.moveTo(this.x,this.y),t.lineTo(i.x,i.y),t.stroke()}),t.setLineDash([])}drawScore(t){t.fillStyle="white",t.textAlign="center",t.textBaseline="middle";const i=this.y>y.RADIUS*5?this.y-y.RADIUS*2:this.y+y.RADIUS*2;this.focused&&t.fillText(`${this.label} ${this.brain.score.toFixed()}`,this.x,i)}};let p=y;p.TRACK_NB=6;p.RADIUS=10;p.MAX_NB=y.TRACK_NB/2;const j=async()=>{new R;const t=O(),i=t.getContext("2d");if(!i)throw new Error("no 2d context");const s=t.width=window.innerWidth,a=t.height=window.innerHeight,e=new B;let n=[],r=n[0];const d=new p;d.brain.loadFromFile("top");let f=d.brain.score||0;e.play((h,w)=>{t.width=window.innerWidth,t.height=window.innerHeight;const v=new Array(b).fill(0);n.forEach((o,l)=>{v[o.faction]++,c(o),o.update(),o.x>s&&(o.x=0),o.x<0&&(o.x=s),o.y>a&&(o.y=0),o.y<0&&(o.y=a)}),v.forEach((o,l)=>{if(o<p.MAX_NB){const u=n.find(P=>P.faction===l),N=(u==null?void 0:u.x)||F(0,s),$=(u==null?void 0:u.y)||F(0,a),k=(u==null?void 0:u.a)||T(-Math.PI,Math.PI),m=new p({x:N,y:$,a:k,energy:100,faction:l});m.brain.loadFromFile("top"),m.brain.mutationAmount=o/p.MAX_NB/(1+f)*500,m.brain.randomize(),m.brain.score=0,n.push(m)}});const A=n.concat().sort((o,l)=>l.brain.score-o.brain.score);if(n.forEach(o=>o.updateTargets(n,s,a)),n.forEach(o=>{o.focused=o===A[0],o.draw(i)}),n=n.filter(o=>!o.dead),r=A[0],r&&r.brain.score>f){const o=r.brain.score;console.log(`New score: ${f} > ${o.toFixed()} (+${(o-f).toFixed(3)})`),f=o,r.brain.saveToFile("top")}});function c(h){const w=[];h.others.forEach(l=>{w.push(l.distance),w.push(l.opportunity)});const[v,A,o]=h.brain.feedForward(w);v&&h.forward(),A&&h.turnLeft(),o&&h.turnRight()}};export{j as default};
