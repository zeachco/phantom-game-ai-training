import{c as O}from"./dom.be162d4e.js";import{GamePad as R}from"./Gamepad.8a108b30.js";import{l as I,r as F,b as M,v as _}from"./three.module.f7a5d9ae.js";import{GameLoop as B}from"./GameLoop.4f365e9c.js";const m=3,S=Array(m).fill(0).map((t,i)=>I(0,360,(i+1)/m));function g(t,i){const s=t+i;return s>m-1?0:s<0?m-1:s}class D{constructor(i){this.weight=0,this.bias=0,Object.assign(this,i)}}class T{constructor(i,s=1,e=[5],a=0,o=0){this.inputs=i,this.outputs=s,this.hiddenLayers=e,this.generation=a,this.mutationAmount=o,this.layers=[],this.score=0,this.layers=[i,...e,s].map(r=>new Array(r).fill(0).map(()=>new D({bias:0,weight:0}))),this.randomize(1)}loadFromFile(i){const s=localStorage.getItem(i),e=JSON.parse(s);return this.fromObject(e),e}saveToFile(i){localStorage.setItem(i,this.toJSON())}fromObject(i){Object.assign(this,i)}toJSON(){const i={score:this.score,generation:this.generation,layers:this.layers};return JSON.stringify(i,null,2)}train(i,s=1e3){const e=[];for(let a=1;a<=s;a++){const[o,r]=i(),c=this.clone(a/s),f=this.feedForward(o),d=r.reduce((h,w)=>h+Math.abs(r[w]-f[w]),0);console.log({inputs:o,expected:r,results:f,distance:d}),e.push({network:c,mutation:c.mutationAmount,distance:d})}return e.sort((a,o)=>a.distance-o.distance),console.table(e.map(a=>a.distance)),e}clone(i=this.mutationAmount){return new T(this.inputs,this.outputs,this.hiddenLayers,this.generation+1,i)}feedForward(i,s=0){const e=this.layers[s];if(!e)return i;const a=e.map(o=>i.reduce((r,c)=>{const f=o.weight*c;return f>o.bias?f:r},0));return this.feedForward(a,s+1)}randomize(i=this.mutationAmount){for(let s=0;s<this.layers.length;s++){const e=this.layers[s];for(let a=0;a<e.length;a++){const o=e[a];o.bias=I(o.bias,F(-1,1),i),o.weight=I(o.weight,F(-1,1),i)}}}}const y=class{constructor(t={}){this.faction=M(0,m-1),this.label=this.faction+"",this.x=0,this.y=0,this.vx=0,this.vy=0,this.a=0,this.va=0,this.s=0,this.focused=!1,this.dead=!1,this.others=[],this.energy=100,this.atk=0,this.vatk=0,this.brain=new T(y.MAX_NB*2,3,[y.MAX_NB,5]),Object.assign(this,t)}forward(){this.vx+=Math.cos(this.a)*.2,this.vy+=Math.sin(this.a)*.2,this.brain.score-=.01}turnLeft(){this.va-=.02}turnRight(){this.va+=.02}get radius(){return y.RADIUS+this.energy/20}update(){this.s*=.99,this.va*=.8,this.vx*=.9,this.vy*=.9,this.vatk*=.9,this.atk=(this.atk+this.vatk)*.7,!this.dead&&(this.energy-=this.s/50,this.energy-=this.va/100,this.x+=this.vx,this.y+=this.vy,this.a+=this.va,this.a>Math.PI&&(this.a-=Math.PI*2),this.a<-Math.PI&&(this.a+=Math.PI*2),this.brain.score<-25&&(this.dead=!0))}updateTargets(t,i,s){if(this.others=[],!this.dead){for(let e=0;e<t.length;e++){const a=t[e];if(a.dead||a.faction===this.faction)continue;const o=_(this.x-a.x,this.y-a.y);let r=0;const c=g(this.faction,1)===a.faction,f=g(this.faction,-1)===a.faction;c&&r--,f&&r++,o<this.radius+a.radius&&(g(this.faction,1)===a.faction&&(this.dead=!0,this.brain.score-=10),g(this.faction,-1)===a.faction&&(a.dead=!0,this.brain.score+=10));let d=a.x,h=a.y;d-this.x>i/2&&(d-=i),d-this.x<i/-2&&(d+=i),this.y-h<s/-2&&(h-=s),this.y-h>s/2&&(h+=s),this.others.push({x:d,y:h,distance:o,opportunity:r})}this.others.sort((e,a)=>e.distance-a.distance)}}draw(t){this.focused&&this.drawRelations(t),this.drawBody(t),this.drawScore(t)}drawBody(t){const i=this.focused?1:.4,s=g(this.faction,-1),e=Math.PI*.1;t.lineWidth=3,t.strokeStyle=`hsla(${S[this.faction]}, 100%, 70%, ${i})`,t.fillStyle=`hsla(${S[this.faction]}, 100%, 50%, ${i})`,t.save(),t.translate(this.x,this.y),t.rotate(this.a),t.beginPath(),t.moveTo(this.radius*.5,0),t.arc(0,0,this.radius,e,Math.PI*2-e),t.lineTo(this.radius*.5,0),t.stroke(),t.fill(),t.beginPath(),t.strokeStyle=`hsla(${S[s]}, 100%, 80%, ${i})`,t.fillStyle=`hsla(${S[s]}, 100%, 20%, ${i})`,t.lineTo(0,0),t.lineTo(this.radius+5,0),t.stroke(),t.fill(),t.restore()}drawRelations(t){t.setLineDash([3,3]),t.lineWidth=2,this.others.slice(0,y.TRACK_NB).forEach((i,s)=>{const e=1/(1+s);t.beginPath(),t.strokeStyle=i.opportunity>0?`rgba(0, 255, 0, ${e})`:`rgba(255, 128, 0, ${e})`,t.moveTo(this.x,this.y),t.lineTo(i.x,i.y),t.stroke()}),t.setLineDash([])}drawScore(t){t.fillStyle="white",t.textAlign="center",t.textBaseline="middle";const i=this.y>y.RADIUS*5?this.y-y.RADIUS*2:this.y+y.RADIUS*2;this.focused&&t.fillText(`${this.brain.score.toFixed(0)}`,this.x,i)}};let p=y;p.TRACK_NB=3;p.RADIUS=10;p.MAX_NB=20;const X=async()=>{new R;const t=O(),i=t.getContext("2d");if(!i)throw new Error("no 2d context");const s=t.width=window.innerWidth,e=t.height=window.innerHeight,a=new B;let o=[],r=o[0];const c=new p;c.brain.loadFromFile("top");let f=c.brain.score||0;a.play((h,w)=>{t.width=window.innerWidth,t.height=window.innerHeight;const v=new Array(m).fill(0);o.forEach((n,l)=>{v[n.faction]++,d(n),n.update(),n.x>s&&(n.x=0),n.x<0&&(n.x=s),n.y>e&&(n.y=0),n.y<0&&(n.y=e)}),v.forEach((n,l)=>{if(n<p.MAX_NB){const u=o.find($=>$.faction===l),N=(u==null?void 0:u.x)||M(0,s),k=(u==null?void 0:u.y)||M(0,e),P=(u==null?void 0:u.a)||F(-Math.PI,Math.PI),b=new p({x:N,y:k,a:P,energy:100,faction:l});b.brain.loadFromFile("top"),b.brain.mutationAmount=n/p.MAX_NB/(1+f)*500,b.brain.randomize(),b.brain.score=0,o.push(b)}}),o.forEach(n=>n.updateTargets(o,s,e));const A=o.concat().sort((n,l)=>l.brain.score-n.brain.score);if(o.forEach(n=>{n.focused=n===A[0],n.draw(i)}),o=o.filter(n=>!n.dead),r=A[0],r&&r.brain.score>f){const n=r.brain.score;console.log(`New score: ${f} > ${n.toFixed()} (+${(n-f).toFixed(3)})`),f=n,r.brain.saveToFile("top")}});function d(h){const w=[];h.others.forEach(l=>{w.push(l.distance),w.push(l.opportunity)});const[v,A,n]=h.brain.feedForward(w);v&&h.forward(),A&&h.turnLeft(),n&&h.turnRight()}};export{X as default};
